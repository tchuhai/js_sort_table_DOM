{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAErC,EAAM,gBAAgB,CAAC,QAAS,SAAC,CAAjC,EACE,GAAI,AAAqB,OAArB,EAAE,MAAM,CAAC,OAAO,EAIpB,IAAM,EAAK,EAAE,MAAM,EAEnB,AAGF,SAAqB,CAAM,CAAE,CAAK,EAChC,IAEI,EAFE,EAAO,EAAM,aAAa,CAAC,SAC3B,EAAY,MAAM,IAAI,CAAC,EAAK,IAAI,EAGtC,OAAQ,GACN,IAAK,OACL,IAAK,WACH,EAAU,SAAU,CAAI,CAAE,CAAI,EAC5B,OAAO,EAAK,KAAK,CAAC,EAAO,CAAC,SAAS,CAAG,EAAK,KAAK,CAAC,EAAO,CAAC,SAAS,CAC9D,EACA,EACN,EACA,KAEF,KAAK,MACH,EAAU,SAAU,CAAI,CAAE,CAAI,EAC5B,OAAO,EAAK,KAAK,CAAC,EAAO,CAAC,SAAS,CAAG,EAAK,KAAK,CAAC,EAAO,CAAC,SAAS,AACpE,EACA,KAEF,KAAK,SACH,EAAU,SAAU,CAAI,CAAE,CAAI,EAC5B,OACE,EAAK,KAAK,CAAC,EAAO,CAAC,SAAS,CAAC,OAAO,CAAC,QAAS,IAC9C,EAAK,KAAK,CAAC,EAAO,CAAC,SAAS,CAAC,OAAO,CAAC,QAAS,GAElD,CAEJ,CAEA,EAAU,IAAI,CAAC,GACf,AAAA,EAAK,MAAM,CAAX,KAAA,CAAA,E,A,S,C,E,G,M,O,C,G,O,E,E,EAAe,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,EAAA,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,EAAA,I,A,W,M,A,U,wI,IACjB,EApCc,EAAG,SAAS,CAAE,EAAG,SAAS,EACxC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\ntable.addEventListener(\"click\", function(e) {\n    if (e.target.tagName !== \"TH\") return;\n    var th = e.target;\n    sortColumns(th.cellIndex, th.innerHTML);\n});\nfunction sortColumns(colNum, title) {\n    var _body;\n    var body = table.querySelector(\"tbody\");\n    var rowsArray = Array.from(body.rows);\n    var compare;\n    switch(title){\n        case \"Name\":\n        case \"Position\":\n            compare = function compare(rowA, rowB) {\n                return rowA.cells[colNum].innerHTML > rowB.cells[colNum].innerHTML ? 1 : -1;\n            };\n            break;\n        case \"Age\":\n            compare = function compare(rowA, rowB) {\n                return rowA.cells[colNum].innerHTML - rowB.cells[colNum].innerHTML;\n            };\n            break;\n        case \"Salary\":\n            compare = function compare(rowA, rowB) {\n                return rowA.cells[colNum].innerHTML.replace(/[$,]/g, \"\") - rowB.cells[colNum].innerHTML.replace(/[$,]/g, \"\");\n            };\n            break;\n    }\n    rowsArray.sort(compare);\n    (_body = body).append.apply(_body, _to_consumable_array(rowsArray));\n}\n\n//# sourceMappingURL=index.604b3bc2.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\n\ntable.addEventListener('click', (e) => {\n  if (e.target.tagName !== 'TH') {\n    return;\n  }\n\n  const th = e.target;\n\n  sortColumns(th.cellIndex, th.innerHTML);\n});\n\nfunction sortColumns(colNum, title) {\n  const body = table.querySelector('tbody');\n  const rowsArray = Array.from(body.rows);\n  let compare;\n\n  switch (title) {\n    case 'Name':\n    case 'Position':\n      compare = function (rowA, rowB) {\n        return rowA.cells[colNum].innerHTML > rowB.cells[colNum].innerHTML\n          ? 1\n          : -1;\n      };\n      break;\n\n    case 'Age':\n      compare = function (rowA, rowB) {\n        return rowA.cells[colNum].innerHTML - rowB.cells[colNum].innerHTML;\n      };\n      break;\n\n    case 'Salary':\n      compare = function (rowA, rowB) {\n        return (\n          rowA.cells[colNum].innerHTML.replace(/[$,]/g, '') -\n          rowB.cells[colNum].innerHTML.replace(/[$,]/g, '')\n        );\n      };\n      break;\n  }\n\n  rowsArray.sort(compare);\n  body.append(...rowsArray);\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","table","document","querySelector","addEventListener","e","target","tagName","th","sortColumns","colNum","title","compare","body","rowsArray","from","rows","rowA","rowB","cells","innerHTML","replace","sort","append","apply","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","cellIndex"],"version":3,"file":"index.604b3bc2.js.map"}